// <auto-generated />
using System;
using CarParkingSystem.Infrastructure.Database.SQLDatabase.BookingDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarParkingSystem.Infrastructure.Database.SQLDatabase.Migrations
{
    [DbContext(typeof(CarParkingBookingDbContext))]
    [Migration("20250407041108_dealerOnehourpayment")]
    partial class dealerOnehourpayment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarParkingSystem.Domain.Entities.SQL.DealerDetails", b =>
                {
                    b.Property<string>("DealerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DealerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerGPSLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerLandmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DealerOpenOrClosed")
                        .HasColumnType("bit");

                    b.Property<string>("DealerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("DealerProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DealerRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerStoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerTiming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValidUser")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OneHourAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rights")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DealerID");

                    b.ToTable("DealerDetails");
                });

            modelBuilder.Entity("CarParkingSystem.Domain.Entities.SQL.DealerSlotDetails", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Available_Slots")
                        .HasColumnType("int");

                    b.Property<int>("Booked_Slots")
                        .HasColumnType("int");

                    b.Property<string>("DealerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Slots")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DealerSlotDetails");
                });

            modelBuilder.Entity("CarParkingSystem.Domain.Entities.SQL.UserDetails", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rights")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UserProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UserID");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("CarParkingSystem.Domain.Entities.SQL.VehicleDetails", b =>
                {
                    b.Property<string>("VehicleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Alternative_Phone_Number")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverPhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("VehicleImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.ToTable("VehicleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
